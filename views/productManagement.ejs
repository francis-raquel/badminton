<%- include('partials/header') %>
<style>
  .modern-table {
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-collapse: separate;
    border-spacing: 0;
    table-layout: fixed;
    width: 100%;
  }
  .modern-table th, .modern-table td {
    padding: 12px;
    vertical-align: middle;
    border: none;
  }
  .modern-table th {
    background-color: #f8f9fa;
    font-weight: 600;
    color: #343a40;
  }
  .modern-table th:nth-child(1),
  .modern-table td:nth-child(1) {
    width: 35%; /* Name */
  }
  .modern-table th:nth-child(2),
  .modern-table td:nth-child(2) {
    width: 20%; /* Price */
  }
  .modern-table th:nth-child(3),
  .modern-table td:nth-child(3) {
    width: 35%; /* Type */
  }
  .modern-table th:nth-child(4),
  .modern-table td:nth-child(4) {
    width: 10%; /* Buttons */
  }
  .modern-table tbody tr {
    transition: background-color 0.2s ease;
    cursor: pointer;
  }
  .modern-table tbody tr:hover {
    background-color: #f1f3f5;
  }
  .modern-table tbody tr.selected {
    background-color: #e0f7fa !important;
    outline: 2px solid #26c6da !important;
  }
  .modern-table tbody tr td:first-child {
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;
  }
  .modern-table tbody tr td:last-child {
    border-top-right-radius: 8px;
    border-bottom-right-radius: 8px;
  }
  .btn-modern {
    border-radius: 8px;
    padding: 8px 16px;
  }
</style>
<div class="container mt-5">
  <h1 class="mb-4">Product Management</h1>
  <div class="card">
    <div class="card-body">
      <!-- Error Alert for Duplicate Product -->
      <% if (error === 'duplicate') { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          A product with this name already exists. Please use a different name.
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% } %>

      <!-- Products Table -->
      <h5 class="card-title">Existing Products</h5>
      <div class="d-flex gap-2 mb-3">
        <button class="btn btn-primary btn-modern" onclick="toggleNewProduct()">New Product</button>
        <button id="edit-btn" class="btn btn-primary btn-modern" onclick="editProduct()" disabled>Edit</button>
        <button id="delete-btn" class="btn btn-danger btn-modern" onclick="deleteProduct()" disabled>Delete</button>
      </div>
      <table class="table modern-table" id="productTable">
        <thead>
          <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Type</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <!-- Add Product Row -->
          <tr id="new-product" style="display: none;">
            <form action="/ITadmin/add-product" method="POST">
              <td><input type="text" class="form-control" name="name" placeholder="Name" required></td>
              <td><input type="number" step="0.01" class="form-control" name="price" placeholder="Price" required></td>
              <td>
                <select class="form-select mb-2" name="category" onchange="toggleCustomCategory('new')" required>
                  <option value="">Select Type</option>
                  <% foodTypes.forEach(type => { %>
                    <option value="<%= type %>"><%= type %></option>
                  <% }) %>
                  <option value="Other">Other</option>
                </select>
                <input type="text" class="form-control d-none" id="new-custom-category" name="customCategory" placeholder="Enter Custom Type">
              </td>
              <td>
                <button type="submit" class="btn btn-sm btn-success btn-modern">Add</button>
                <button type="button" class="btn btn-sm btn-secondary btn-modern" onclick="toggleNewProduct()">Cancel</button>
              </td>
            </form>
          </tr>
          <!-- Existing Products -->
          <% products.forEach((product, index) => { %>
            <tr id="product-<%= index %>" data-index="<%= index %>" data-id="<%= product.id %>" onclick="selectProduct(this)" ondblclick="editProduct()">
              <td><%= product.name %></td>
              <td><%= product.price.toFixed(2) %></td>
              <td><%= product.category %></td>
              <td></td>
            </tr>
            <tr id="edit-<%= index %>" style="display: none;">
              <form action="/ITadmin/edit-product/<%= product.id %>" method="POST">
                <td><input type="text" class="form-control" name="name" value="<%= product.name %>" required></td>
                <td><input type="number" step="0.01" class="form-control" name="price" value="<%= product.price %>" required></td>
                <td>
                  <select class="form-select mb-2" name="category" onchange="toggleCustomCategory('<%= index %>')" required>
                    <option value="">Select Type</option>
                    <% foodTypes.forEach(type => { %>
                      <option value="<%= type %>" <%= product.category === type ? 'selected' : '' %>><%= type %></option>
                    <% }) %>
                    <option value="Other">Other</option>
                  </select>
                  <input type="text" class="form-control d-none" id="edit-custom-category-<%= index %>" name="customCategory" placeholder="Enter Custom Type" value="<%= product.category %>">
                </td>
                <td>
                  <button type="submit" class="btn btn-sm btn-success btn-modern">Save</button>
                  <button type="button" class="btn btn-sm btn-secondary btn-modern" onclick="toggleEdit('<%= index %>')">Cancel</button>
                </td>
              </form>
            </tr>
          <% }) %>
        </tbody>
      </table>
      
        <div class="d-flex justify-content-end gap-2 mt-4">
          <a href="/ITadmin" class="btn btn-secondary btn-modern">‚Üê Back to ITAdmin</a>
          <a href="/" class="btn btn-dark btn-modern">üè† Home</a>
    </div>

  </div>
</div>

<script>
  let selectedIndex = null;
  let selectedId = null;

  function selectProduct(row) {
    const index = row.dataset.index;
    const id = row.dataset.id;
    console.log('Product selected:', { index, id });
    document.querySelectorAll('#productTable tbody tr').forEach(r => r.classList.remove('selected'));
    row.classList.add('selected');
    selectedIndex = index;
    selectedId = id;
    document.getElementById('edit-btn').disabled = !selectedIndex;
    document.getElementById('delete-btn').disabled = !selectedIndex;
  }

  function toggleNewProduct() {
    console.log('Toggling new product row');
    const newProductRow = document.getElementById('new-product');
    const isVisible = newProductRow.style.display === 'table-row';
    newProductRow.style.display = isVisible ? 'none' : 'table-row';
    if (!isVisible) {
      // Reset custom category field
      document.getElementById('new-custom-category').classList.add('d-none');
      document.getElementById('new-custom-category').value = '';
    }
  }

  function editProduct() {
    if (selectedIndex) {
      toggleEdit(selectedIndex);
    } else {
      alert('Please select a product to edit.');
    }
  }

  function toggleEdit(index) {
    console.log('Toggling edit for index:', index);
    const viewRow = document.getElementById(`product-${index}`);
    const editRow = document.getElementById(`edit-${index}`);
    const isEditing = editRow.style.display === 'table-row';
    viewRow.style.display = isEditing ? '' : 'none';
    editRow.style.display = isEditing ? 'none' : 'table-row';
    if (!isEditing) {
      // Reset custom category field visibility based on selected type
      const select = editRow.querySelector('select[name="category"]');
      const customInput = document.getElementById(`edit-custom-category-${index}`);
      if (select.value === 'Other') {
        customInput.classList.remove('d-none');
      } else {
        customInput.classList.add('d-none');
        customInput.value = '';
      }
    }
  }

  function deleteProduct() {
    if (selectedId && confirm('Are you sure you want to delete this product?')) {
      console.log('Deleting product:', selectedId);
      window.location.href = `/ITadmin/delete-product/${selectedId}`;
    } else if (!selectedId) {
      alert('Please select a product to delete.');
    }
  }

  function toggleCustomCategory(index) {
    const select = event.target;
    const customInput = index === 'new' ? document.getElementById('new-custom-category') : document.getElementById(`edit-custom-category-${index}`);
    if (select.value === 'Other') {
      customInput.classList.remove('d-none');
    } else {
      customInput.classList.add('d-none');
      customInput.value = '';
    }
  }
</script>
<%- include('partials/footer') %>